JDBC
--------------------------------------
creating table
create table wipro73(empno number,name varchar2(30),address varchar2(30),salary number)
--------------------------------------------------------------------------------------------------------
insert data
insert into wipro73 values(102,'goutham','Bangalore',56000);
--------------------------------------------------------------------------------------------------------------
view the data
select * from wipro73;
------------------------------------------------------------------------------------------------------------
update the data
update wipro73 set salary=67000 where empno=102;
-------------------------------------------------------------------------------------------------------------
to add a column
alter table wipro73 add phoneno number
-----------------------------------------------------------------------------------------------------------
select * from wipro73;
----------------------------------
to update the newly entered column
--------------------------------------------------------------------------------------------
update wipro73 set phoneno=7766554433 where empno=101;
update wipro73 set phoneno=7766994433 where empno=102;
update wipro73 set phoneno=7777554433 where empno=103;
---------------------------------------------------------------------------------------------------
delete a row
delete from wipro73 where empno=103;
--------------------------------------------------------------------------------------------------------
delete a column
alter table wipro73 drop column phoneno;
-------------------------------------------------------------------------------------------------------------
path for jar file:-
C:\oraclexe\app\oracle\product\10.2.0\server\jdbc\lib\ojdbc14.jar
------------------------------------------------------------------------------------------------------------------------------
copy it and paste on the desktop.
-------------------------------------------------------------------------------------------------------------
project ---rc----properties---------java build path------------libraries----------classpath----add external jar-----apply and close
------------------------------------------------------------------------------------------------------------
Example-1
--------------------
package org.jdbc;
import java.sql.*;
public class FirstJdbc 
{
public static void main(String[] args)throws Exception 
{
	//load the driver
	Class.forName("oracle.jdbc.driver.OracleDriver");
	//create connection
	Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","1234");
	//query statement
	Statement st=con.createStatement();
	st.execute("create table emp73(empno number,name varchar2(30),address varchar2(30))");
	System.out.println("Table created");
}
}
------------------------------------------------------------------------------------------------
Example-2
------------------------
package org.jdbc;
import java.sql.*;
public class FirstJdbc2 
{
public static void main(String[] args)throws Exception 
{
	//load the driver
	Class.forName("oracle.jdbc.driver.OracleDriver");
	//create connection
	Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","1234");
	//query statement
	Statement st=con.createStatement();
	st.execute("insert into emp73 values(101,'sandip','bangalore')");
	System.out.println("row inserted");
}
}
-------------------------------------------------------------------------------------------------------------
example-3
-------------------------
package org.jdbc;
import java.sql.*;
public class FirstJdbc3 
{
public static void main(String[] args)throws Exception 
{
	//load the driver
	Class.forName("oracle.jdbc.driver.OracleDriver");
	//create connection
	Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","1234");
	//query statement
	Statement st=con.createStatement();
	st.execute("update emp73 set address='Hydrabad' where empno=101");
	System.out.println("row updated");
}
}
----------------------------------------------------------------------------------------------------------------------------------
example-4
--------------------
package org.jdbc;
import java.sql.*;
public class FirstJdbc4 
{
public static void main(String[] args)throws Exception 
{
	//load the driver
	Class.forName("oracle.jdbc.driver.OracleDriver");
	//create connection
	Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","1234");
	//query statement
	Statement st=con.createStatement();
	st.execute("delete from emp73 where empno=101");
	System.out.println("row deleted");
}
}
-----------------------------------------------------------------------------------------------
*
PreparedStatement st=con.prepareStatement("insert into emp73 values(?,?,?)");
for dynamic insert,update,delete ...
--------------------------------------------------------------------
example-5
-------------------
package org.jdbc;
import java.sql.*;
import java.util.*;
public class FirstJdbc5 
{
public static void main(String[] args)throws Exception 
{
	Class.forName("oracle.jdbc.driver.OracleDriver");
	Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","1234");
    PreparedStatement st=con.prepareStatement("insert into emp73 values(?,?,?)");
    Scanner ob=new Scanner(System.in);
    System.out.println("enter empno,name,address");
    int empno=ob.nextInt();
    String name=ob.next();
    String add=ob.next();
    st.setInt(1,empno);
    st.setString(2,name);
    st.setString(3,add);
    st.execute();
	System.out.println("row inserted");
}
}
-------------------------------------------------------------------------------------------------------------
example-6
----------------------
package org.jdbc;
import java.sql.*;
import java.util.*;
public class FirstJdbc6 
{
public static void main(String[] args)throws Exception 
{
	Class.forName("oracle.jdbc.driver.OracleDriver");
	Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","1234");
    PreparedStatement st=con.prepareStatement("update emp73 set address=? where empno=?");
    Scanner ob=new Scanner(System.in);
    System.out.println("enter empno whose address you want to update");
    int empno=ob.nextInt();
    String add=ob.next();
    st.setString(1,add);
    st.setInt(2,empno);
    st.execute();
	System.out.println("row updated");
}
}
-----------------------------------------------------------------------------------------
example-7
--------------------
package org.jdbc;
import java.sql.*;
import java.util.*;
public class FirstJdbc7 
{
public static void main(String[] args)throws Exception 
{
	Class.forName("oracle.jdbc.driver.OracleDriver");
	Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","1234");
    PreparedStatement st=con.prepareStatement("delete from emp73 where empno=?");
    Scanner ob=new Scanner(System.in);
    System.out.println("enter empno you want to delete");
    int empno=ob.nextInt();
    st.setInt(1,empno);
    st.execute();
	System.out.println("row deleted");
}
}
---------------------------------------------------------------------------------------
create a table airlines(flno,custname,custaddress,source,destination)
1)insert data,update data,delete data.
enter data dynamically.

create the project using case and switch.and display the data also.

----------------------------------------------------------------------------------------------
JDBC notes
------------------
JDBC (java database connectivity) 
----------------------------------------------------------------------
java(byte code) ----->driver----------->database(oracle/sqlserver)(ascii code)

A java database connectivity is an application which will behave as an interface between the java program and the database.

Database driver are 2 types:-
--------------------------------------------------------------
1)thick driver(java->driver->odbc->database)
2)thin driver(java->driver->database)

java have 4 driver:-
1)type 1 driver acts as a bridge between jdbc and other database connectivity mechanisms such as odbc.

2)type 2 driver converts jdbc call into database vendor specific .

3)type 3 driver translates jdbc calls into database server independent and middleware server specific net protocol calls .

4)type 4 driver is a pure java driver which implements the database protocol to interact directly with a database.

 
To interact with database the necessary steps are :-
----------------------------------------------------------------
creating connection with jdbc 
------------------------------------------------------------
1)Class.forName("oracle.jdbc.driver.OracleDriver");
load the driver class in the memory

2)Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","1234");
get connection from DriverManager


3)Statement st=con.createStatement();
get a statement from connection

4)ResultSet rs=st.executeQuery("select * from emp");
ResultSet interface refer memory Buffer 
using statement executeQuery

Sql package has 2 classes and 8 interfaces:-
--------------------------------------------------------
classes :-DriverManager,Types
interface :-Driver,Connection,Statement,PreparedStatement,CallableStatement,
ResultSet,ResultSetMetaData,DatabaseMetaData
------------------------------------------------------------------------------------------------------
there are 3 methods in statement interface
1)executeQuery()->select
2)executeUpdate()->update(return 0,1)
3)execute()->insert,delete,create,drop(return true,false)

java datatype:-String,int,double,JavaObject
Jdbc datatype:-varchar,char,number,number(7,2),clob,blob

To obtain data:- ResultSet
getInt(),getString(),getDouble(),getFloat(),getByte(),getShort(),getBoolean(),getLong(),getObject(),getChar()

Statement ->
It can handle one statement at one time.
--------------------------------------------------------------
PreparedStatement->
It can handle multiple sql queries.
It also used for putting the values for the sql queries at the runtime.
It is faster than the statement
------------------------------------------------------------------------
Callable Statement->
It is used to call stored functions and procedures of database.
--------------------------------------------------------------------------------
Type 4 driver:-
-------------------
import java.sql.*;
class SqlTest
{
public static void main(String arg[])throws Exception
{
Class.forName("oracle.jdbc.driver.OracleDriver");
Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","1234");
jdbc->protocal
oracle->database
thin->type4
localhost->local machine
1521->port no
xe->service id of oracle
system->username
1234->password

CallableStatement st=con.prepareCall("{call addition(?,?,?)}");
st.setInt(1,10);
st.setInt(2,20);
st.registerOutParameter(3,Types.INTEGER);
st.execute();
int n=st.getInt(3);
System.out.println(n);
}
}
-----------------
create or replace procedure addition(i IN number,j IN number,K OUT number)
is 
begin
K:=i+j;
end;
--------------------------

ResultSetMetaData:-

ResultSetMetaData md=rs.getMetaData();
System.out.println(md.getColumnCount());
System.out.println(md.getColumnName());

DatabaseMetaData:-Data about data

DatabaseMetaData md=con.getMetaData();
System.out.println(md.getDriverVersion());
System.out.println(md.getDriverName());
-----------------------------------------------------------------------------
example-4
--------------------
ResultSet to retrive the data
---------------------------------------
package org.jdbc;
import java.sql.*;
import java.util.*;
public class FirstJdbc8 
{
public static void main(String[] args)throws Exception 
{
	Class.forName("oracle.jdbc.driver.OracleDriver");
	Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","1234");
    PreparedStatement st=con.prepareStatement("select * from emp73");
    ResultSet rs=st.executeQuery();
    while(rs.next())
    {
	System.out.println(rs.getInt(1)+"   "+rs.getString(2)+"   "+rs.getString(3));
    }
}
}
-----------------------------------------------------------------------------------------------------------------------------------------
example-5
------------------
package org.jdbc;
import java.sql.*;
import java.util.*;
public class FirstJdbc9 
{
public static void main(String[] args)throws Exception 
{
	Class.forName("oracle.jdbc.driver.OracleDriver");
	Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","1234");
    PreparedStatement st=con.prepareStatement("select * from emp73 where empno=?");
    Scanner ob=new Scanner(System.in);
    System.out.println("Enter the empno you want to search");
    int empno=ob.nextInt();
    st.setInt(1, empno);
    ResultSet rs=st.executeQuery();
    while(rs.next())
    {
	System.out.println(rs.getInt(1)+"   "+rs.getString(2)+"   "+rs.getString(3));
    }
}
}
------------------------------------------------------------------------------------------------------------
Pl-SQL
--------------------------------------------------------------------
we have 3 parts
1)declare
2)begin
3)end
---------------------------------------------------------------------
example-1
--------------------
declare
a number:=10;
b number:=20;
c number;
begin
c:=a+b;
dbms_output.put_line('The result is :'||c);
end;
-------------------------------------------------------------
example-2
--------------------
declare
a number;
b number;
c number;
begin
a:=:a;
b:=:b;
c:=a+b;
dbms_output.put_line('The result is :'||c);
end;
---------------------------------------------------------------------------------------------
example-3
-------------------
wap to enter 6 nos and find sum and average.
------------------------------------------------------------------------------------------
declare
a number;
b number;
c number;
d number;
e number;
sum1 number;
avg1 number;
begin
a:=:a;
b:=:b;
c:=:c;
d:=:d;
e:=:e;
sum1:=a+b+c+d+e;
avg1:=sum1/5;
dbms_output.put_line('The sum is :'||sum1);
dbms_output.put_line('The avg is :'||avg1);
end;
----------------------------------------------------------------------------
example-4
------------------
declare 
a number:=10;
b number:=20;
begin
if(a>b)then
dbms_output.put_line('The greatest is '||a);
else
dbms_output.put_line('The greatest is '||b);
end if;
end;
------------------------------------------------------------------
example-5
--------------------
declare 
a number;
b number;
begin
a:=:a;
b:=:b;
if(a>b)then
dbms_output.put_line('The greatest is '||a);
else
dbms_output.put_line('The greatest is '||b);
end if;
end;
---------------------------------------------------------------
example-6
-----------------
declare 
a number;
begin
a:=:a;
if(a mod 2=0)then
dbms_output.put_line('The number is even ');
else
dbms_output.put_line('The number is odd ');
end if;
end;

------------------------------------------------------------
example-7
--------------------
declare 
a number;
b number;
c number;
begin
a:=:a;
b:=:b;
c:=:c;
if(a>b and a>c)then
dbms_output.put_line('The greatest is '||a);
elsif(b>a and b>c)then
dbms_output.put_line('The greatest is '||b);
else
dbms_output.put_line('The greatest is '||c);
end if;
end;
-------------------------------------------------------------------------
example-8
-----------------------------------
function
-------------------
create or replace function adds(i number,j number)return number is
begin
return i+j;
end;
-------------------------------------------------------
call the function
----------------------------------------
declare
k number;
begin
k:=adds(10,20);
dbms_output.put_line('The result is'||k);
end;
-----------------------------------------------------------------------------------

JDBC example-1
-----------------------------
 create or replace function add_pro(i IN number,j IN number)return number is
K number;
begin
k:=i+j;
return K;
end;
----------------------------------------------------------------------------------------
package org.jdbc;
import java.sql.*;
public class FirstJdbc10 
{
	public static void main(String[] args)throws Exception
	{
	Class.forName("oracle.jdbc.driver.OracleDriver");
	Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","1234");
	
	CallableStatement cs=con.prepareCall("{?=call add_pro(?,?)}");
	cs.registerOutParameter(1,Types.INTEGER);
	cs.setInt(2,11);
	cs.setInt(3,22);
	cs.execute();
	int n=cs.getInt(1);
	System.out.println("the result is "+n);
}
}
-------------------------------------------------------------------------------------------------------------------

example:-2

procedure :- It does not return any avalue.
----------------------------------------------------------------------
create or replace procedure add_number(i number default 0,j number default 0,k number default 0)is
begin
dbms_output.put_line('result :'||(i+j+k));
end;

begin
add_number(10,20,21);
end;
---------------------------------------------------------------------------------
Example-3
--------------------
import java.sql.*;
class SqlTest
{
public static void main(String arg[])throws Exception
{
Class.forName("oracle.jdbc.driver.OracleDriver");
Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","1234");
CallableStatement st=con.prepareCall("{call addition(?,?,?)}");
st.setInt(1,10);
st.setInt(2,20);
st.registerOutParameter(3,Types.INTEGER);
st.execute();
int n=st.getInt(3);
System.out.println("The result is "+n);
}
}

----------------------------------------------------------------------------------------------------------
 create or replace procedure addition(i IN number,j IN number,K OUT number) is
 begin K:=i+j; 
 end;
----------------------------------------------------------------------------------------------------------------------------
JSP
-------------
<html>
<h1><center>Student Registration Page</center></h1>
<form action="Second.jsp">
<table>
<tr><td>Enter your Name<td><input type=text name=t1 size=20 required></tr>
<tr><td>Enter your Address<td><input type=text name=t2 size=20 required></tr>
<tr><td>Enter your Email<td><input type=text name=t3 size=20 required></tr>
<tr><td>Enter your Phone no<td><input type=text name=t4 size=20 required></tr>
<tr><td><td><input type=submit value=submit></tr>

</table>
</form>
</html>
----------------------------------------------
Second.jsp
------------------------
<% String a=request.getParameter("t1");
String b=request.getParameter("t2");
String c=request.getParameter("t3");
String d=request.getParameter("t4");%>


<%out.println("The name is "+a);
out.println("The address is "+b);
out.println("The name is "+c);
out.println("The name is "+d);
 %>
------------------------------------------------

Example-3
----------------------
create table empjsp73(name varchar2(30),address varchar2(30),email varchar2(30),phoneno varchar2(30));

select * from empjsp73;
-------------------------------------------------
<html>
<h1><center>Student Registration Page</center></h1>
<form action="Second.jsp">
<table>
<tr><td>Enter your Name<td><input type=text name=t1 size=20 required></tr>
<tr><td>Enter your Address<td><input type=text name=t2 size=20 required></tr>
<tr><td>Enter your Email<td><input type=text name=t3 size=20 required></tr>
<tr><td>Enter your Phone no<td><input type=text name=t4 size=20 required></tr>
<tr><td><td><input type=submit value=submit></tr>

</table>
</form>
</html>
----------------------------------------------------
<%@page import="java.sql.*" %>
<% String a=request.getParameter("t1");
String b=request.getParameter("t2");
String c=request.getParameter("t3");
String d=request.getParameter("t4");%>


<%out.println("The name is "+a);
out.println("The address is "+b);
out.println("The email is "+c);
out.println("The phoneno is "+d);
 %>
 <%  Class.forName("oracle.jdbc.driver.OracleDriver");
 Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","1234");
 PreparedStatement ps=con.prepareStatement("insert into empjsp73 values(?,?,?,?)");
 ps.setString(1,a);
 ps.setString(2,b);
 ps.setString(3,c);
 ps.setString(4,d);
 ps.execute();
 out.println("row inserted");
 %>
--------------------------------------------------------------------------
*add ojdbc14.jar to WEB-INF---lib folder
------------------------------------------------------------------------
example-2
-------------------
<html>
<h1><center>Student Registration Page</center></h1><hr>
<form action="Second.jsp">
<table>
<tr><td>Enter your Name<td><input type=text name=t1 size=20></tr>
<tr><td>Enter your Address<td><input type=text name=t2 size=20></tr>
<tr><td>Enter your Email<td><input type=text name=t3 size=20></tr>
<tr><td>Enter your Phone no<td><input type=text name=t4 size=20></tr>
<tr><td><td><input type=submit value=insert name=b1>
<input type=submit value=update name=b1>
<input type=submit value=delete name=b1>
<input type=submit value=select name=b1></tr>
</table>
</form>
</html>
----------------------------------------------------------------------
<%@page import="java.sql.*" %>
<% String a=request.getParameter("t1");
String b=request.getParameter("t2");
String c=request.getParameter("t3");
String d=request.getParameter("t4");
String e=request.getParameter("b1");
%>

 <%  Class.forName("oracle.jdbc.driver.OracleDriver");
 Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","1234");
 if(e.equals("insert"))
 {
 PreparedStatement ps=con.prepareStatement("insert into empjsp73 values(?,?,?,?)");
 ps.setString(1,a);
 ps.setString(2,b);
 ps.setString(3,c);
 ps.setString(4,d);
 ps.execute();
 out.println("row inserted");
 }
 else if(e.equals("update"))
 {
 PreparedStatement ps=con.prepareStatement("update empjsp73 set address=?,email=?,phoneno=? where name=?");
  ps.setString(1,b);
 ps.setString(2,c);
 ps.setString(3,d);
 ps.setString(4,a);
 ps.execute();
 out.println("row update");
 }
 else if(e.equals("delete"))
 {
 PreparedStatement ps=con.prepareStatement("delete from empjsp73 where name=?");
 ps.setString(1,a);
 ps.execute();
 out.println("row delete");
 }
 else if(e.equals("select"))
 {
 PreparedStatement ps=con.prepareStatement("select * from empjsp73");
ResultSet rs=ps.executeQuery();
out.println("<table border=1>");
out.println("<tr><th>Name<th>Address<th>Email<th>Phone no</tr>");
while(rs.next())
{
out.println("<tr><td>"+rs.getString(1)+"<td> "+rs.getString(2)+" <td>"+rs.getString(3)+"<td> "+rs.getString(4)+" </tr>");
}
out.println("</table>");
 }
 else
 {
 out.println("Wrong Input");
 }
 
 %>
--------------------------------------------------------------------------------------------------------------------------------------





